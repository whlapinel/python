package templates

import (
	"gh_static_portfolio/cmd/domain"
	"strconv"
)

templ CoursesListComponent(courses []domain.Course) {
	@Layout(NewCoursesListPage(nil)) {
		<div class="p-4 flex gap-2 w-svw">
			<ul class="min-w-fit">
				for _, course := range courses {
					<li class="bg-blue-500 rounded p-1 m-1 hover:bg-blue-400">
						<a
							href={ templ.SafeURL(RemoveDocsFromPath(courseRoutePath(course)) + FileName(course)) }
							hx-target="#page"
							hx-select="#page"
						>{ course.Title() }</a>
					</li>
				}
			</ul>
			<p class="max-w-prose">
				I teach <code>Python</code> I and II at Phillip O. Berry Academy of Technology, a technology magnet school where programming courses are required as an integral part of a rigorous software development pathway. Along with AP courses in Computer Science, these courses establish a foundation in programming, data manipulation, and problem-solving, skills that are essential for success in higher-level computer science.
			</p>
			if hasImage(coursesDir) {
				<img src={ "./image.png" } class="rounded-full size-32"/>
			}
		</div>
	}
}

templ CourseComponent(course domain.Course) {
	@Layout(&page{title: "Course"}) {
		<div class="p-4 flex gap-2">
			<ul class="min-w-96">
				for _, unit := range course.Units {
					<a href={ templ.SafeURL(RemoveDocsFromPath(unitRoutePath(unit, course) + FileName(unit))) }>
						<li class="bg-purple-600 rounded p-1 m-1">
							<strong>Unit { strconv.Itoa(unit.Number) }:</strong> { unit.Description }
						</li>
					</a>
				}
			</ul>
			<div class="flex flex-col gap-2">
				<h1 class=" text-4xl">{ course.Title() }</h1>
				<p>{ course.Description }</p>
				if hasImage(courseRoutePath(course)) {
					<img src={ "./image.png" } class="border-solid border-white rounded-lg h-64"/>
				}
			</div>
		</div>
	}
}

templ UnitComponent(unit domain.Unit, course domain.Course) {
	@Layout(&page{title: course.Title()}) {
		<div class="p-4 flex gap-2">
			<ul class="min-w-96">
				for _, lesson := range unit.Lessons {
					<a href={ templ.SafeURL(RemoveDocsFromPath(lessonRoutePath(lesson, unit, course) + FileName(lesson))) }>
						<li class="bg-purple-600 rounded p-1 m-1">
							<strong>Lesson { strconv.Itoa(lesson.Number) }:</strong> { lesson.Description }
						</li>
					</a>
				}
			</ul>
			<div class="flex flex-col">
				<h1 class=" text-xl">{ unit.Title() }</h1>
				<p>{ unit.Description }</p>
				if hasImage(unitRoutePath(unit, course)) {
					<img src={ "./image.png" }/>
				}
			</div>
		</div>
	}
}

templ LessonComponent(lesson domain.Lesson, unit domain.Unit, course domain.Course) {
	@Layout(&page{title: course.Title()}) {
		<div class="p-4 flex gap-2">
			<ul class="min-w-96">
				if hasSlides(lessonRoutePath(lesson, unit, course)) {
					<a href={ templ.SafeURL(RemoveDocsFromPath(lessonRoutePath(lesson, unit, course) + "slides.html")) } target="_blank">
						<li class="bg-purple-600 rounded p-1 m-1">
							Slides
						</li>
					</a>
				} else {
					<p>No content for this lesson yet!</p>
				}
				if hasFilesDir(filesRoutePath(lesson, unit, course)) {
					<a href={ templ.SafeURL(filesRoutePath(lesson, unit, course)) } target="_blank">
						<li class="bg-purple-600 rounded p-1 m-1">
							Other Files
						</li>
					</a>
				}
			</ul>
			<div class="flex flex-col">
				<h1 class=" text-xl">{ lesson.Title() }</h1>
				<p>{ lesson.Description }</p>
			</div>
		</div>
	}
}
